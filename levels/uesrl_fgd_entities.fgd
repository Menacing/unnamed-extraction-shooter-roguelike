@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = Globalname
[
	globalname(string) : "Unique name in the Map Scene. When FuncGodot builds the map, this entity will be renamed to entity_ + globalname. This can be a useful alternative to targetname, especially when trying to reparent generated nodes." : ""
]

@BaseClass color(204 204 0) size(-8 -8 -8, 8 8 8) base(Globalname) = Light
[
	color(color255) : "The light's color." : "255 255 255"
	energy(float) : "The light's strength multiplier. For OmniLight3D and SpotLight3D, changing this value will only change the light color's intensity, not the light's radius." : "1"
	indirect_energy(float) : "The light's strength multiplier. For OmniLight3D and SpotLight3D, changing this value will only change the light color's intensity, not the light's radius." : "1"
	shadow_bias(float) : "Used to adjust shadow appearance. Too small a value results in self-shadowing, while too large a value causes shadows to separate from casters. Adjust as needed." : "0.1"
	shadows(choices) : "If true, the light will cast real-time shadows. This has a significant performance cost. Only enable shadow rendering when it makes a noticeable difference in the scene's appearance" = 
	[
		0 : "No"
		1 : "Yes"
	]
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) base(Globalname) = Func
[
	_phong(choices) : "Set to 1 to give the brush entity smooth shading." = 
	[
		0 : "No"
		1 : "Yes"
	]
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = Targetname
[
	targetname(string) : "Adds this entity to a group with this targetname." : ""
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = Target
[
	target(string) : "Entity group to call the use function on when this entity is triggered." : ""
	targetfunc(string) : "Function to call on target entities. As is, the target function cannot accept arguments, so make sure it doesn't require specifying arguments." : ""
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) base(Target, Targetname, Globalname) = Trigger[]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = mover_base
[
	rotation(string) : "" : "0 0 0"
	scale(string) : "" : "1 1 1"
	speed(float) : "" : "1"
	translation(string) : "" : "0 0 0"
]
@SolidClass color(204 204 204) base(Func) = func_geo : "Static map geometry. Generates occluder instances." []
@SolidClass color(204 204 204) base(func_geo) = geo_ballistic_solid : "Solid geometry with ballistic penetration" 
[
	game_material_info(choices) : "List of GameMaterialInfo objects. Keep the order in sync with the GameMaterialInfoList or the linkage will break" = 
	[
		0 : "brick"
		1 : "metal"
		2 : "stone"
		4 : "tile"
		3 : "wood"
	]
	game_material_info_path(string) : "godot path to the GameMaterialInfo file for this brush" : ""
]

@PointClass base(Light) = omnilight : "OmniLight3D entity." 
[
	range(float) : "The light's radius in Quake Units. The entity script converts this to Godot Units in the LightOmni script." : "320"
]

@PointClass base(Light) = lightspot : "SpotLight3D entity." 
[
	angle(float) : "The spotlight's angle in degrees." : "45"
	mangle(string) : "Orientation in degrees." : "0 0 0"
	range(float) : "The maximal range that can be reached by the spotlight in Quake Units. The entity script converts this to Godot Units in the LightOmni script." : "320"
]

@SolidClass color(204 204 204) = area_enemy_spawn : "enemy spawn area" 
[
	biome(choices) : "default biome" : 0 = 
	[
		0 : "science"
	]
	max_spawned(integer) : "" : 1
	min_spawned(integer) : "" : 1
	tier(choices) : "default tier" : 0 = 
	[
		0 : "easy"
		2 : "hard"
		1 : "medium"
	]
]

@SolidClass color(204 204 204) = area_loot_spawn : "loot spawn area" 
[
	biome(choices) : "default biome" : 0 = 
	[
		0 : "science"
	]
	max_spawned(integer) : "" : 1
	min_spawned(integer) : "" : 1
	tier(choices) : "default tier" : 0 = 
	[
		0 : "easy"
		2 : "hard"
		1 : "medium"
	]
]

@SolidClass color(204 204 204) = area_extract : "Extraction area" []

@SolidClass color(204 204 204) base(geo_ballistic_solid) = geo_ballistic_container : "Solid geometry with ballistic penetration" 
[
	biome(choices) : "default biome" : 0 = 
	[
		0 : "science"
	]
	container_size(integer) : "" : 28
	max_spawned(integer) : "" : 1
	min_spawned(integer) : "" : 1
	tier(choices) : "default tier" : 0 = 
	[
		0 : "easy"
		2 : "hard"
		1 : "medium"
	]
]

@PointClass color(204 204 204) size(-2 -2 -2, 2 2 2) base(Target) = door_hinge : "door_hinge" []

@SolidClass color(204 204 204) base(geo_ballistic_solid, mover_base) = geo_ballistic_mover : "Solid geometry with ballistic penetration that can move" []

@SolidClass color(204 204 204) base(Target, geo_ballistic_mover) = geo_ballistic_door : "Solid geometry with ballistic penetration that can move" []

@SolidClass color(204 204 204) = area_patrol_poi : "Area for enemies to patrol to" []
