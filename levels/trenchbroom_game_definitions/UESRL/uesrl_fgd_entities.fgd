@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) base(ShadowCast, Target) = Func[
	_phong(integer) : "Smooth mesh output" : 0
	_phong_angle(float) : "Mesh output smoothing angle." : "89"
]

@SolidClass color(204 204 204) base(Func) = func_geo : "Static geometry entity." [
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = ShadowCast[
]

@BaseClass color(204 204 204) size(-8 -8 -8, 8 8 8) = Target[
	message(string) :  : ""
	target(string) : "The target group this entity belongs to." : ""
	targetname(string) : "The target group this entity targets upon being triggered." : ""
]

@SolidClass color(204 204 204) = geo_ballistic_solid : "Solid geometry with ballistic penetration" [
	game_material_info(choices) : "List of GameMaterialInfo objects. Keep the order in sync with the GameMaterialInfoList or the linkage will break" = [
		0 : "brick"
		1 : "metal"
		2 : "stone"
		4 : "tile"
		3 : "wood"
	]
	game_material_info_path(string) : "godot path to the GameMaterialInfo file for this brush" : ""
]

@SolidClass color(204 204 204) = area_enemy_spawn : "enemy spawn area" [
	biome(choices) = [
		0 : "science"
	]
	max_spawned(integer) :  : 1
	min_spawned(integer) :  : 1
	tier(choices) = [
		0 : "easy"
		2 : "hard"
		1 : "medium"
	]
]

@SolidClass color(204 204 204) = area_loot_spawn : "Sloot spawn area" [
	biome(choices) = [
		0 : "science"
	]
	max_spawned(integer) :  : 1
	min_spawned(integer) :  : 1
	tier(choices) = [
		0 : "easy"
		2 : "hard"
		1 : "medium"
	]
]

@SolidClass color(204 204 204) base(geo_ballistic_solid, mover) = geo_ballistic_mover : "Solid geometry with ballistic penetration that can move" [
]

@SolidClass color(204 204 204) base(geo_ballistic_mover, Target) = geo_ballistic_door : "Solid geometry with ballistic penetration that can move" [
]

@SolidClass = trigger : "Trigger Volume" [
	target(string) :  : ""
]

@SolidClass = physics : "Physics Brush" [
	mass(float) :  : "1"
	velocity(string) :  : "0 0 0"
]

@SolidClass = mover : "Moving brush." [
	rotation(string) :  : "0 0 0"
	scale(string) :  : "1 1 1"
	speed(float) :  : "1"
	targetname(string) :  : ""
	translation(string) :  : "0 0 0"
]

@PointClass color(204 204 204) size(-2 -2 -2, 2 2 2) base(Target) = door_hinge[
]

@PointClass size(-8 -8 -8, 8 8 8) = omnilight : "Invisible light source" [
	_color(color255) : "Light color" : "255 255 255"
	delay(choices) : "Attenuation" = [
		1 : "Inverse distance falloff"
		2 : "Inverse distance squared"
		5 : "Inverse distance squared B"
		0 : "Linear falloff (Default)"
		4 : "Local minlight"
		3 : "No falloff"
	]
	light(integer) : "Brightness" : 200
	wait(integer) : "Fade distance multiplier" : 1
]

@PointClass size(-8 -8 -8, 8 8 8) = spotlight : "Invisible light source" [
	_color(color255) : "Light color" : "255 255 255"
	angle(float) : "Rotation Angle" : "0"
	delay(choices) : "Attenuation" = [
		1 : "Inverse distance falloff"
		2 : "Inverse distance squared"
		5 : "Inverse distance squared B"
		0 : "Linear falloff (Default)"
		4 : "Local minlight"
		3 : "No falloff"
	]
	light(integer) : "Brightness" : 200
	mangle(string) : "Spotlight angle" : "0 0 0"
	wait(integer) : "Fade distance multiplier" : 1
]

@SolidClass color(204 204 204) base(geo_ballistic_solid) = geo_ballistic_container : "Solid geometry with ballistic penetration" [
	biome(choices) = [
		0 : "science"
	]
	container_size(integer) :  : 28
	max_spawned(integer) :  : 1
	min_spawned(integer) :  : 1
	tier(choices) = [
		0 : "easy"
		2 : "hard"
		1 : "medium"
	]
]

@SolidClass color(204 204 204) = area_extract : "Extraction area" [
]
